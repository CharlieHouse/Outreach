#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Jun 25 11:27:45 2018

@author: ch20g13
"""

##### IMPORTS #####
from guizero import App,PushButton,Slider,Text,CheckBox,Picture
import numpy as np
import pyaudio
import wave
import scipy.io as sio
import scipy.signal as sig
import pdb

##### <<<<<<<<< VARIABLES >>>>>>>>> #####

audio_gain = np.zeros((3,1))

fs = 44100
output_index = 1 #2 for DVS
output_channels = 2
frame_size = 128

##### <<<<<<<<< LOAD AUDIO DATA >>>>>>>>> #####

# Main Audio Track
wf = wave.open("jazz.wav", 'rb')


##### <<<<<<<<< FUNCTION DEFS >>>>>>>>> #####

# MAIN CALLBACK FUNCTION
def playingCallback(in_data, frame_count, time_info, status):
    data_bytes = wf.readframes(frame_count)                 # Read WAV Data

    if len(data_bytes) == 0 :                               # loop at end of wav
        wf.rewind()

    audio_frame = np.frombuffer(data_bytes,dtype=np.int16)  # Convert Bytes to Numpy Array

    audio_frame = [audio_frame[idx::2] for idx in range(2)]
    
    # pre=create output buffers - zero pads if final frame is not filled
    audio_lpf = np.zeros(frame_size,)
    audio_hpf = np.zeros(frame_size,)

    # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< AUDIO SIGNAL PROCESSING GOES IN HERE >>>>>>>>>>>>>>>>>>>>>>>>>>>

    # Left channel of WAV is LPF, right channel of WAV is HPF
    audio_lpf[:len(audio_frame[0])] = audio_frame[0]
    audio_hpf[:len(audio_frame[1])] = audio_frame[1]

    # Apply Gains
    spkr1_lpf = audio_lpf * audio_gain[0]
    spkr1_hpf = audio_hpf * audio_gain[0]
    spkr2_lpf = audio_lpf * audio_gain[1]
    spkr2_hpf = audio_hpf * audio_gain[1]
    spkr3_lpf = audio_lpf * audio_gain[2]
    spkr3_hpf = audio_hpf * audio_gain[2]



    # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  END OF AUDIO SIGNAL PROCESSING   >>>>>>>>>>>>>>>>>>>>>>>>>>>
    # Interleave Ouptuts 
    output = (spkr1_lpf, spkr1_hpf)#, spkr2_lpf, spkr2_hpf, spkr3_lpf, spkr3_hpf)
    output = np.vstack(output).reshape((-1,), order='F')

    out_data = output.astype(np.int16)
    out_data = out_data.tobytes()
    return out_data, pyaudio.paContinue



# GUI FUNCTIONS

def select_speaker(ind):
    global audio_gain
    audio_gain = np.zeros((3,1))
    audio_gain[ind] =  1


##### <<<<<<<<< SETUP AUDIO STREAM >>>>>>>>> #####
p = pyaudio.PyAudio()

stream = p.open(format = pyaudio.paInt16, channels = output_channels, rate = fs, output = True, stream_callback=playingCallback,output_device_index=output_index,frames_per_buffer=frame_size)
stream.start_stream()


##### <<<<<<<<< CONFIGURE GUI >>>>>>>>> #####
# Header Section
splash_screen = App(title="Splash Screen",bg = (255, 255, 255),layout='grid')
isvrlogo = Picture(splash_screen, image="isvrlogo.jpg",grid=[0,0])
isvrlogo.height = 60
isvrlogo.width = 180
annotation = Text(splash_screen,text="Second Year Loudspeakers",size=30,grid=[1,0,3,1])
uoslogo = Picture(splash_screen, image="uoslogo.jpg",grid=[5,0],align='right')
uoslogo.height = 60
uoslogo.width = 200


spkr1 = PushButton(splash_screen,command=select_speaker,args=[0],image="spkr1.jpg",grid=[1,1])
spkr2 = PushButton(splash_screen,command=select_speaker,args=[1],image="spkr2.jpg",grid=[2,1])
spkr3 = PushButton(splash_screen,command=select_speaker,args=[2],image="spkr3.jpg",grid=[3,1])


splash_screen.display()